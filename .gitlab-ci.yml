image: node:lts-bullseye-slim

cache: &cache
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/
  policy: pull

.only: &main_and_mr
  refs:
    - main
    - merge_requests

.release: &release
  variables:
    - $CI_COMMIT_AUTHOR == "Alfred Pennyworth <alfred.pennyworth@polymtl.ca>"

stages:
  - install
  - tests
  - release
  - export_version
  - build_and_push_client_image

install:
  stage: install
  only: *main_and_mr
  except: *release
  before_script:
    - echo "@backend:registry=https://gitlab.com/api/v4/projects/29618275/packages/npm/" >> .npmrc
    - echo "//gitlab.com/api/v4/projects/29618275/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
  script:
    - npm ci --cache .npm --prefer-offline
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules/
      - .npm
    policy: pull-push

lint_and_build:
  stage: tests
  only: *main_and_mr
  except: *release
  script:
    - npm run format:check
    - npm run lint
    - npm run build
  cache: *cache
  dependencies:
    - install
  artifacts:
    paths:
      - dist/

karma:
  stage: tests
  only: *main_and_mr
  except: *release
  image: $CI_REGISTRY_IMAGE/headless-chromium:0.0.2
  script:
    - Xvfb :99 -ac -screen 0 1920x1080x24 &
    - npm run test -- --browsers=ChromeHeadlessNoSandbox --watch=false
  cache: *cache
  dependencies:
    - install
  coverage: '/Statements.*?(\d+(?:\.\d+)?)%/'
  artifacts:
    reports:
      cobertura: coverage/client/cobertura-coverage.xml

release:
  stage: release
  only:
    refs:
      - main
  except: *release
  image: $CI_REGISTRY_IMAGE/release:0.0.1
  variables:
    GIT_AUTHOR_NAME: Alfred Pennyworth
    GIT_AUTHOR_EMAIL: alfred.pennyworth@polymtl.ca
    GIT_COMMITTER_NAME: Alfred Pennyworth
    GIT_COMMITTER_EMAIL: alfred.pennyworth@polymtl.ca
    GITLAB_TOKEN: $SEMANTIC_RELEASE_TOKEN
  script:
    - npx semantic-release
  cache: *cache

export_version:
  stage: export_version
  only: *release
  script:
    - echo "CLIENT_VERSION=$(node -pe "require('./package.json').version")" >> export_version.env
  artifacts:
    reports:
      dotenv: export_version.env

build_and_push_client_image:
  stage: build_and_push_client_image
  image: docker:latest
  only: *release
  services:
    - docker:dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/client:$CLIENT_VERSION
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
    - echo "@backend:registry=https://gitlab.com/api/v4/projects/29618275/packages/npm/" >> .npmrc
    - echo "//gitlab.com/api/v4/projects/29618275/packages/npm/:_authToken=${RO_NPM_TOKEN}" >> .npmrc
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
